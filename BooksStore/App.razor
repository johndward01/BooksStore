@using BooksStore.Blazor.Components
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using Microsoft.Extensions.Logging
@using System.Reflection;
@inject LazyAssemblyLoader AssemblyLoader
@inject ILogger<App> Logger

<ErrorHandler>
    <CascadingAuthenticationState>
       <Router AppAssembly="@typeof(App).Assembly"
               AdditionalAssemblies="_lazyLoadedAssemblies" 
               OnNavigateAsync="OnNavigateAsync">
            <Found Context="routeData">
                <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(UserLayout)">
                    <NotAuthorized>
                        <RedirectToLogin />
                    </NotAuthorized>
                </AuthorizeRouteView>
                <FocusOnNavigate RouteData="@routeData" Selector="h1" />
            </Found>
            <NotFound>
                <PageTitle>Not found</PageTitle>
                <LayoutView Layout="@typeof(UserLayout)">
                    <div style="text-align:center;margin-top:20px">
                        <h3><span style="color:red"><strong>Oops!</strong></span>Nothing can befound at this address</h3>
                        <p>It looks like the page you requested in the URL cannot be found</p>
                    </div>
                </LayoutView>
            </NotFound>
        </Router>
    </CascadingAuthenticationState>
</ErrorHandler>

@code
{
    private List<Assembly> _lazyLoadedAssemblies = new();

    private async Task OnNavigateAsync(NavigationContext args)
    {
        try
        {
            if (args.Path.Equals("book/form", StringComparison.InvariantCultureIgnoreCase))
            {
                var assemblies = await AssemblyLoader.LoadAssembliesAsync(new[] { "BooksStore.Blazor.Components.dll" });
                _lazyLoadedAssemblies.AddRange(assemblies);
            }
        }
        catch (Exception ex)
        {
            Logger.LogError("Error: {Message}", ex.Message);
        }
    }
}           